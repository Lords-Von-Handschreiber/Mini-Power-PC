{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Mini-Power-Pc","tagline":"PowerPC, Emulator, Processor","google":"","body":"# Aufgabe \"Mini-Power-PC\"\r\n\r\n## Aufgabenbeschreibung\r\nSchreiben Sie ein Programm in einer beliebigen Programmiersprache/Umgebung, das den in der Vorlesung spezifizierten \"Mini-Power-PC\" emuliert - d.h. alle Befehle des Befehlssatzes (siehe Anlage Befehlssatz \"Mini-Power-PC\") ausführt.\r\n\r\n1. Aufgabe\r\n  * Als Eingabe soll gelesen werden: (2 Punkte)\r\n    * Ein beliebiges mit dem Befehlssatz geschriebenes Programm, das ab Speicher 100 in den Speicher eingelesen wird\r\n    * Die Parameter des Programms (Eingabewerte) ab Speicher 500 (Der Op-Code und die Parameter des Programms können als Binär-, Dezimal- oder Hex-Zahlen eingelesen werden - Ihre Wahl)\r\n  * Als Ausgabe wird folgendes erwartet: (3 + 2 Punkte)\r\n    * Die aktuellen Zustände der Register:\r\n      * Befehlszähler, Befehlsregister\r\n      * Akkumulator, Carry-Bit\r\n      * Reg-1, Reg-2, Reg-3\r\n      * Optional: Alle Werte auch als Binär-Werte (16 Bit)\r\n    * Der aktuelle decodierte Befehl aus dem Befehlsregister (als Mnemonics) (1 Punkt)\r\n    * Der aktuelle Zustand des Speichers:\r\n      * 5 Befehle vor bis 10 Befehle nach dem aktuellen Befehl\r\n      * Der Inhalt der Speicherzellen 500 bis 529 (wortweise)\r\n      * Optional: alle Werte auch als Binär-Werte (16 Bit)\r\n    * Die Anzahl der durchgeführten Befehle (zum Programmstart 0)\r\n  * Implementieren Sie einen \"schnellen\" und einen \"slow\" Modus sowie optional einen \"Step-Modus\": (2 + 2 Punkte)\r\n    * Schneller Modus: Während des Programmablaufs erfolgt keine Ausgabe (keine Aktualisierung der Ausgabedaten); diese werden erst am Programmende aktualisiert\r\n    * Slow-Modus: Während des Programmablaufs wird nach Bearbeitung eines jeden Befehls die Ausgabe aktualisiert\r\n    * Step-Modus: Wie der Slow-Modus, jedoch wird das Programm nach Bearbeitung eines jeden Befehls unterbrochen und wird erst nach einer Bestätigung durch den User (z. B. Drücken einer Taste) wieder fortgesetzt\r\n\r\n## Authoren\r\nChristian Bachmann - @coffeefan\r\n\r\nLuca Selinger - @peac3maker\r\n\r\nThomas Bandixen - @tbandixen\r\n"}